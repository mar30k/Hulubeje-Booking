@using System.Web
@model List<HulubejeBooking.Models.CInemaModels.MovieModel>;
@{
    DateTime today = DateTime.Today;
    string minDate = today.ToString("yyyy-MM-dd");
    string formattedDate = DateTime.Now.ToString("MMM-d h.mmtt");
}
<partial name="_Navigation" />

<head>
    <link rel="stylesheet" type="text/css" href="css/Style.css">
    <title>Movies in Cinema</title>
    <style>
        @@media(max-width: 767px){
            .small-text {
                font-size: 10px;
            }
        }

        #selectedDate{
            width: 100%;
            border-color: #FEBB02;
            height: 60px;
            border-radius: 5px;
        }
    </style>
</head>
<html>
    <body>
    <div class="row pt-4" style="background-color: #063970; ">
        <div class="container">
            <div class="pt-2" style="display: grid; grid-template-columns: repeat(3, 1fr);">
                <div class="calendar">
                    <form asp-action="Index" method="post">
                        <div class="calendar">
                            @Html.TextBox("selectedDate", DateTime.Now.ToString("yyyy-MM-dd"), new { @class = "form-control", @type = "date", @onchange = "this.form.submit()" })
                        </div>
                    </form>
                </div>
                <div class="CompanyFilter">
                    <div class="input-group">
                        <input type="text" id="companyFilter" class="form-control small-text" placeholder="Cinema Search" style="width: 100%; border-color: #FEBB02; height: 60px; border-radius: 5px;" />
                    </div>
                </div>
                <div class="CompanyFilter">
                    <div class="input-group">
                        <input type="text" id="movieFilter" class="form-control small-text" placeholder="Movies Search" style="width: 100%; border-color: #FEBB02; height: 60px; border-radius: 5px;" />
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="custom-container">
        <div class="row mt-3">
            <div id="filteredCardsContainer" class="card-container row flex-wrap" style="display: none;">
                <!-- Filtered cards will be dynamically added here -->
            </div>
            <div id="moviesContainer">
                <partial name="_MovieCardsPartial" />
            </div>
        </div>
    </div>
    @section Scripts {
        <script>
            function filterByCompany() {
                var companyFilterText = document.getElementById('companyFilter').value.trim().toLowerCase();
                var moviesContainer = document.getElementById('moviesContainer');
                var movieFilterInput = document.getElementById('movieFilter');
                var filteredCardsContainer = document.getElementById('filteredCardsContainer');
                filteredCardsContainer.classList.add('filtered-cards-container');

                if (companyFilterText === '') {
                    moviesContainer.style.display = 'block';
                    moviesContainer.style.paddingLeft = '15px';
                    moviesContainer.style.paddingRight = '15px';
                    filteredCardsContainer.style.display = 'none';
                    movieFilterInput.disabled = false;
                } else {
                    moviesContainer.style.display = 'none';
                    filteredCardsContainer.style.display = 'flex';
                    filteredCardsContainer.innerHTML = '';
                    movieFilterInput.disabled = true;

                    var cards = Array.from(moviesContainer.querySelectorAll('.movie-card'));

                    cards.forEach(function (card) {
                        var companyNameButtons = card.querySelectorAll('.button');
                        var matchingButtons = Array.from(companyNameButtons).filter(function (button) {
                            return button.textContent.trim().toLowerCase().includes(companyFilterText);
                        });

                        if (matchingButtons.length > 0) {
                            var clonedCard = card.cloneNode(true);
                            var buttonContainer = clonedCard.querySelector('.button-container');

                            buttonContainer.innerHTML = '';

                            matchingButtons.forEach(function (matchingButton) {
                                buttonContainer.appendChild(matchingButton.cloneNode(true));
                            });

                            filteredCardsContainer.appendChild(clonedCard);
                        }
                    });
                }
            }

            function filterByMovie() {
                var movieFilterText = document.getElementById('movieFilter').value.trim().toLowerCase();
                var companyFilterInput = document.getElementById('companyFilter');
                var moviesContainer = document.getElementById('moviesContainer');
                var filteredCardsContainer = document.getElementById('filteredCardsContainer');

                if (movieFilterText === '') {
                    moviesContainer.style.display = 'block';
                    moviesContainer.style.paddingLeft = '15px';
                    moviesContainer.style.paddingRight = '15px';
                    filteredCardsContainer.style.display = 'none';
                    companyFilterInput.disabled = false;
                } else {
                    moviesContainer.style.display = 'none';
                    filteredCardsContainer.style.display = 'flex';
                    companyFilterInput.disabled = true;

                    filteredCardsContainer.innerHTML = '';

                    var cards = Array.from(moviesContainer.querySelectorAll('.movie-card'));

                    cards.forEach(function (card) {
                        var movieTitle = card.querySelector('.card-title').textContent.trim().toLowerCase();

                        if (movieTitle.includes(movieFilterText)) {
                            var clonedCard = card.cloneNode(true);
                            filteredCardsContainer.appendChild(clonedCard);
                        }
                    });
                }
            }

            // Add event listeners to the search inputs for real-time filtering
            document.getElementById('companyFilter').addEventListener('input', function () {
                if (document.getElementById('movieFilter').value.trim().length > 0) {
                    // Disable company filter if movie filter has text
                    document.getElementById('companyFilter').disabled = true;
                } else {
                    filterByCompany();
                    document.getElementById('companyFilter').disabled = false;
                }
            });

            document.getElementById('movieFilter').addEventListener('input', function () {
                if (document.getElementById('companyFilter').value.trim().length > 0) {
                    // Disable movie filter if company filter has text
                    document.getElementById('movieFilter').disabled = true;
                } else {
                    filterByMovie();
                    document.getElementById('movieFilter').disabled = false;
                }
            });

        </script>
    }

    </body>
</html>
<partial name="_Footer" />

