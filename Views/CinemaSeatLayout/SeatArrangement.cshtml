@model HulubejeBooking.Models.CInemaModels.SeatLayout
@using System.Globalization
@using System.Web
@{
    string formattedDate = DateTime.Now.ToString("MMM-d h.mmtt");
}
@{
    var isVaild = ViewBag.isVaild;
    var isLoggedIN = ViewBag.isLoggedIn;
}
<script>
    sessionStorage.setItem("isValid", @Json.Serialize(@isVaild));
    sessionStorage.setItem("isLoggedIn", @Json.Serialize(@isLoggedIN));
</script>
<partial name="_Navigation" />
<head>
    <title>Seat Layout</title>
    <style>
        .btn:focus,
        .btn:active {
            outline: none !important;
            box-shadow: none !important;
        }

        .container-xl {
            max-width: 100%;
            overflow-x: auto;
        }

        .buttons:hover {
            background-color: green;
            color: white;
            cursor: pointer;
        }

        .buttons {
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0;
            font-size: 10px;
            font-weight: 400;
            background: #fff;
            border: 1px solid #1ea83c;
            border-radius: 2px;
            color: #1ea83c;
            width: 100%;
            height: 100%;
        }

        .hall {
            width: 100%;
            height: 100%;
        }

        .booked-seat {
            background-color: blue;
            color: white;
        }

    </style>
    @{
        var santizedMovieName = HttpUtility.JavaScriptStringEncode(Model.MovieName);
    }
    <script>
        var selectedSeats = [];
        var countdownInterval;
        var countdownTime = 60; // Countdown time in seconds
        var isBookingStarted = false;
        var isThereSelectedSeat = sessionStorage.getItem('secondsAdded');
        var selectedSeats = sessionStorage.getItem('selectedSeats');
        var selectedSeatArray = selectedSeats ? JSON.parse(selectedSeats) : [];
        var numberOfElements = selectedSeatArray.length;
        document.addEventListener("DOMContentLoaded", function () {
            applyEventListenersSkip();
            var buttons = document.querySelectorAll('.buttons');
            var countdown;
            selectedSeats = retrieveSelectedSeatsFromStorage();
            document.body.addEventListener('click', function (event) {
                if (event.target.classList.contains('buttons')) {
                    var seatCode = event.target.id;
                    var seatStatus = event.target.getAttribute('data-seat-status');

                    var isBooked = seatStatus === 'booked';
                    var isSold = seatStatus === 'sold';
                    var isTaken = seatStatus === 'taken';

                    if (!isBookingStarted) {
                        startBooking();
                        isBookingStarted = true;
                    }

                    toggleSeatSelection(seatCode, isBooked || isSold || isTaken);
                }
            });

            setInterval(function () {
                updateSeatInfo();
            }, 10000); // Update every 10000 milliseconds (10 seconds)

            function updateSeatInfo() {
                var movieName = @Html.Raw(Json.Serialize(santizedMovieName));
                var companyTinNumber = "@Model.CompanyTinNumber";
                var code = "@Model.MovieScheduleCode";
                var spacecode = "@Model.SpaceCode";
                var companyName = "@Model.CompanyName";
                var utcTime = "@Model.UtcTime";
                var selectedDate = "@Model.SelectedDate";
                var hallName = "@Model.HallName";
                var dimension = "@Model.Dimension";
                var spaceType = "@Model.SpaceType";

                // Use AJAX to fetch updated seat information
                $.get("/CinemaSeatLayout/GetUpdatedSeatInfo", {
                    companyTinNumber: companyTinNumber, code: code, spacecode: spacecode, movieName: movieName,
                    companyName: companyName, utcTime: utcTime, selectedDate: selectedDate, hallName: hallName, spaceType: spaceType, dimension: dimension
                }, function (data) {
                    $("#seatInfoContainer").html(data);
                    applyEventListeners();
                    updateButtonStatus();
                    updateSelectedSeatsUI();
                    selectedSeatsCountUpdate();
                    applyEventListenersSkip();
                });

                console.log("updated the data");
            }

            function selectedSeatsCountUpdate() {
                var selectedSeatsDisplay = document.getElementById("selectedSeatsDisplay");
                var selectedSeatsCountArray = sessionStorage.getItem('selectedSeats');
                var selectedSeatsArray = JSON.parse(selectedSeatsCountArray);
                var selectedSeatsCount = selectedSeatsArray ? selectedSeatsArray.length : 0;
                selectedSeatsDisplay.textContent = selectedSeatsCount ;
            }

            function applyEventListeners() {
                var buttons = document.querySelectorAll('.buttons');
                buttons.forEach(function (button) {
                    button.addEventListener('click', function () {
                        // Your existing click event logic...
                    });
                });
            }
            function applyEventListenersSkip() {
                var button = document.getElementById('skipButton');
                if (button) {
                    button.addEventListener('click', function () {
                        var selectedSeats = retrieveSelectedSeatsFromStorage();
                        var companyTinNumber = "@Model.CompanyTinNumber";
                        var movieScheduleCode = "@Model.MovieScheduleCode";
                        var articleCode = "@Model.ArticleCode";
                        var movieName = @Html.Raw(Json.Serialize(santizedMovieName));
                        var companyName = "@Model.CompanyName";
                        var utcTime = "@Model.UtcTime";
                        var selectedDate = "@Model.SelectedDate";
                        var hallName = "@Model.HallName";
                        var price = "@Model.Price";
                        var dimension = "@Model.Dimension";
                        var spaceType = "@Model.SpaceType";
                        var branchCode = "@Model.BranchCode";

                        var remainingTime = countdown ?? 0;

                        var selectedSeatsJson = sessionStorage.getItem('selectedSeats');
                        var selectedSeatsArray = selectedSeatsJson ? JSON.parse(selectedSeatsJson) : [];
                        var numberOfElements = selectedSeatsArray.length;
                        console.log("numberOfElements: " + numberOfElements);

                        sessionStorage.setItem('remainingTime', remainingTime);
                        if (remainingTime != 0) {
                            sessionStorage.setItem('countdownStarted', true);
                        }

                        var form = $('<form action="/CinemaFoodAndBeverage/Products" method="post"></form>');

                        form.append('<input type="hidden" name="companyTinNumber" value="' + companyTinNumber + '" />');
                        form.append('<input type="hidden" name="movieScheduleCode" value="' + movieScheduleCode + '" />');
                        form.append('<input type="hidden" name="movieName" value="' + movieName + '" />');
                        form.append('<input type="hidden" name="companyName" value="' + companyName + '" />');
                        form.append('<input type="hidden" name="hallName" value="' + hallName + '" />');
                        form.append('<input type="hidden" name="utcTime" value="' + utcTime + '" />');
                        form.append('<input type="hidden" name="selectedDate" value="' + selectedDate + '" />');
                        form.append('<input type="hidden" name="price" value="' + price + '" />');
                        form.append('<input type="hidden" name="dimension" value="' + dimension + '" />');
                        form.append('<input type="hidden" name="spaceType" value="' + spaceType + '" />');
                        form.append('<input type="hidden" name="articleCode" value="' + articleCode + '" />');
                        form.append('<input type="hidden" name="branchCode" value="' + branchCode + '" />');
                        form.append('<input type="hidden" name="numberOfElements" value="' + numberOfElements + '" />');

                        $('body').append(form);

                        form.submit();
                    });
                } else {
                    console.error("Button not found!");
                }
            }
            function startBooking() {
                console.log("isThereSelectedSeat " + isThereSelectedSeat);
                if (!isThereSelectedSeat) {
                    $('#bookingModal').modal('show');
                    // Handle "OK" button click
                    $('#okButton').one('click', function () {
                        // Close the modal
                        $('#bookingModal').modal('hide');
                        countdown = countdownTime;
                        startCountdownTimer();
                    });
                }
            }

            function startCountdownTimer() {
                // Display the countdown timer div
                $('#countdownTimer').show();
                countdownInterval = setInterval(function () {
                    $('#countdownTimer').text("Time remaining: " + formatTime(countdown));
                    countdown--;

                    if (countdown <= 0) {
                        clearInterval(countdownInterval);
                        resetBooking();
                        alert("Booking time expired. Please restart the booking process.");
                        sessionStorage.clear(); // Clear session storage
                        window.location.href = '@Url.Action("Index", "CinemaHome")';
                    }
                }, 1000);
            }

            var countdownStarted = sessionStorage.getItem('countdownStarted');
            if (countdownStarted === 'true') {
                var remainingTime = parseInt(sessionStorage.getItem('remainingTime'));
                countdown = remainingTime;
                startCountdownTimer();
            } else {
                console.log("Countdown has not started.");
            }

            // Periodically fetch and update seat information
            function updateButtonStatus() {
                var skipButton = document.getElementById('skipButton');
                if (isBookingStarted) {
                    var seatCount = selectedSeats.length;
                    if (seatCount === 0) {
                        skipButton.innerText = "Skip";
                    } else {
                        skipButton.innerText = "You Will Pay " + (seatCount * parseFloat("@Model.Price")).toFixed(2) + " ETB for " + seatCount + " seats";
                    }

                } else {
                    skipButton.innerText = "Skip";
                }
            }

            $('#cancelButton').click(function () {
                $('#bookingModal').modal('hide');
                resetBooking();
                selectedSeatsCountUpdate();
            });

            function formatTime(seconds) {
                var min = Math.floor(seconds / 60);
                var sec = seconds % 60;
                return min + ":" + (sec < 10 ? "0" : "") + sec;
            }

            function resetBooking() {
                clearInterval(countdownInterval);
                var companyTinNumber = "@Model.CompanyTinNumber";
                var movieScheduleCode = "@Model.MovieScheduleCode";

                selectedSeats.forEach(function (selectedSeat) {
                    var button = document.getElementById(selectedSeat);
                    if (button) {
                        button.style.backgroundColor = "";
                    }
                });

                var urlRemove = 'https://api-hulubeje.cnetcommerce.com/api/ManageSeatCache/DeleteCachedSeatsForSchedule';
                $.ajax({
                    url: urlRemove,
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({
                        schedule: movieScheduleCode,
                        allSeats: selectedSeats,
                        orgTin: companyTinNumber
                    }),
                    success: function (response) {
                        // Handle success
                        console.log(response);
                    },
                    error: function (error) {
                        // Handle error
                        console.error(error);
                    }
                });

                // Clear the selected seats array
                selectedSeats = [];
                saveSelectedSeatsToStorage();
                updateButtonStatus();
                isBookingStarted = false; // Reset booking flag
            }
            function toggleSeatSelection(seatCode, isDisabled) {
                console.log("isDisabled" + isDisabled);
                var maxSeats = parseInt("@Model.MaxSeats", 10);
                var index = selectedSeats.indexOf(seatCode);
                var companyTinNumber = "@Model.CompanyTinNumber";
                var movieScheduleCode = "@Model.MovieScheduleCode";
                var consignee = "0912141914"; // Keep the consignee same, as you mentioned
                var urlAdd = 'https://api-hulubeje.cnetcommerce.com/api/ManageSeatCache/SetCachedSeatsForSchedule' +
                    `?schedule=${movieScheduleCode}&seat=${seatCode}&consignee=${consignee}&orgTin=${companyTinNumber}`;

                var urlRemove = 'https://api-hulubeje.cnetcommerce.com/api/ManageSeatCache/DeleteCachedSeatsForSchedule';

                if (!isDisabled && index === -1) {
                    if (selectedSeats.length < maxSeats) {
                        selectedSeats.push(seatCode);

                        var seatNames = selectedSeats.map(function (code) {
                            return document.getElementById(code).innerText;
                        });
                        sessionStorage.setItem('selectedSeatNames', JSON.stringify(seatNames));

                        $.ajax({
                            url: urlAdd,
                            type: 'POST',
                            success: function (response) {
                                // Handle success
                                console.log(response);
                            },
                            error: function (error) {
                                // Handle error
                                console.error(error);
                            }
                        });
                    } else {
                        var alertElement = document.getElementById("seatLimitAlert");
                        alertElement.style.display = "block";
                        setTimeout(function () {
                            alertElement.style.display = "none";
                        }, 2000);
                        return;
                    }
                } else if (!isDisabled) {
                    selectedSeats.splice(index, 1);
                    var updatedSeatNames = selectedSeats.map(function (code) {
                        console.log("seat code: " + code);
                        return document.getElementById(code).innerText;
                    });
                    sessionStorage.setItem('selectedSeatNames', JSON.stringify(updatedSeatNames));

                    $.ajax({
                        url: urlRemove,
                        type: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify({
                            schedule: movieScheduleCode,
                            allSeats: [seatCode],
                            orgTin: companyTinNumber
                        }),
                        success: function (response) {
                            // Handle success
                            console.log(response);
                        },
                        error: function (error) {
                            // Handle error
                            console.error(error);
                        }
                    });
                }
                var button = document.getElementById(seatCode);
                if (button) {
                    button.style.backgroundColor = index === -1 ? "green" : "";
                }
                updateButtonStatus();
                console.log("Selected Seats: ", selectedSeats);

                saveSelectedSeatsToStorage();
                updateSelectedSeatsUI();
                selectedSeatsCountUpdate()
                return selectedSeats;
            }
            function saveSelectedSeatsToStorage() {
                sessionStorage.setItem('selectedSeats', JSON.stringify(selectedSeats));
            }

            function retrieveSelectedSeatsFromStorage() {
                var storedSelectedSeats = sessionStorage.getItem('selectedSeats');
                return storedSelectedSeats ? JSON.parse(storedSelectedSeats) : [];
            }
            function updateSelectedSeatsUI() {
                selectedSeats.forEach(function (seatCode) {
                    var button = document.getElementById(seatCode);
                    if (button) {
                        button.style.backgroundColor = "green"; // Adjust based on your styling
                        button.removeAttribute("disabled"); // Remove the disabled attribute
                        button.style.color = "black";
                    }
                });
            }
            $(document).ready(function () {
                $('#bookingModal').modal(
                    {
                        backdrop: "static",
                        keyboard: false
                    }
                );
                selectedSeatsCountUpdate();
            });
            updateSelectedSeatsUI();
        });

    </script>
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
            <div class="container-fluid">
                <div class="d-flex justify-content-between align-items-center w-100 ml-5">
                    <div class="Popcorn ">
                        <h4>Seats</h4>
                    </div>
                    <div>
                        <div class="today-date" style="display: inline-block; margin-top: 10px; margin-right: 10px;">
                            <div id="countdownTimer" style="display:none;"></div>
                        </div>
                    </div>
                </div>
            </div>
        </nav>
    </header>
    <div id="seatLimitAlert" class="alert alert-danger fixed-bottom mb-3" role="alert" style="display: none; position: fixed; bottom: 20px; left: 20px; width: 300px;">
        You can't select more than @Model.MaxSeats seats
    </div>
    <div class="container-xl">
        <div id="seatInfoContainer">
            <partial name="_SeatArrangementPartialView" />
        </div>
    </div>
    <div class="modal" tabindex="-1" role="dialog" id="bookingModal">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Confirmation</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <p>
                        The selected seats will expire in 1 minute and you will get additional one miunute for every page you
                        progress towards checkout.In total you will have approximately 3 minutes to complete purchase.
                    </p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" id="cancelButton">Cancel</button>
                    <button type="button" class="btn btn-primary" id="okButton">OK</button>
                </div>
            </div>
        </div>
    </div>
</body>
<partial name="_Footer" />