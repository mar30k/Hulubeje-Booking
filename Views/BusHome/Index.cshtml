@model HulubejeBooking.Models.BusModels.BusModel
@using HulubejeBooking.Models.BusModels
@{
    DateTime today = DateTime.Today;
    string minDate = today.ToString("yyyy-MM-dd");
    DateTime tomorro = DateTime.Today.AddDays(1);
    string tomorrow = tomorro.ToString("yyyy-MM-dd");
}
<partial name="_Navigation" />
<head>
    <title>Bus Booking Home</title>
    <style>
    /* Default styling for larger screens */
    .d-flex {
        display: flex;
    }

    .select,
    .selectCity,
    #travelDate,
    #searchButton {
        margin-right: 0px;
    }

    /* Responsive styling for smaller screens */
    @@media (max-width: 500px) {
        .d-flex {
            flex-direction: column;
        }

        .select,
        .selectCity,
        #travelDate,
        #searchButton {
            width: 100%;
            margin-right: 0;
            margin-bottom: 10px;
        }
    }
</style>
</head>
<div class="row" style="background-color:#063970;">
    <div class="container">
        <header class="container-fluid" style="padding-top: 5%;">
            <div>
                <h1 style="color: white;">Book Your Bus Journey</h1>
                <h4 style="color: white;">Discover convenient and hassle-free bus travel with our easy booking platform.</h4>
            </div>
        </header>
    </div>
    <div class="container mt-5">
        @{
            List<RouteModel> allRoutes = Model?.Routes;
            List<RouteModel> toCity = Model?.Routes;
            List<City> allCities = Model?.RouteConfiguration?.Cities ?? new List<City>();
            List<int?> fromCities = Model?.RouteConfiguration?.Routes?.Select(route => route.FromCity).ToList() ?? new List<int?>();
            List<string> fromCityNames = fromCities.Select(cityCode => allCities.FirstOrDefault(city => city.CityCode == cityCode)?.CityName ?? "Unknown").ToList();
        }
        <div class="d-flex" style="">
            <select class="select" style="width:100%; border-color:#FEBB02; height:60px;border-radius:5px;" id="departure" required>
                @if (allRoutes is not null)
                {
                    @foreach (var city in allRoutes)
                    {
                        <option value="@city.OriginCityName">@city.OriginCityName</option>
                    }
                }
            </select>
            <select class="selectCity" style="width:100%; border-color:#FEBB02; height:60px; border-radius:5px;" id="destination" required>
                <option value="" disabled selected>Select a Destination City</option>
                @if (allRoutes is not null)
                {
                    @foreach (var city in allRoutes)
                    {
                        foreach (var destCity in city.Routes.OrderBy(c=> c.DestinationCityName).ToList())
                        {

                            <option value="@destCity.RouteId">@destCity.DestinationCityName  Via:   @destCity.ViaName - Origin Terminal:   @destCity.OriginTerminalName</option>
                        }
                    }
                }
            </select>
            <input style="width:50%; border-color:#FEBB02; height:60px;border-radius:5px;" class="select" type="date" value="@minDate"  id="travelDate" required>
            <button id="searchButton" style="color: white" class="btn btn-outline-primary mr-1 ml-1">Search</button>
            <button id="history" style="color: white" class="btn btn-outline-primary">History</button>
        </div> 
    </div>
</div>
    @{
        var shuffledModel = Model?.Company?.OrderBy(x => Guid.NewGuid()).ToList();
    }
<div class="container">
    <div class="row mt-3">
        @if (shuffledModel is not null)
        {
            @foreach (var item in shuffledModel)
            {
                <div class="col-12 col-sm-6 mb-3">
                    <div class="card" style="max-width: 540px;">
                        <div class="row g-0">
                            <div class="col-md-4">
                                <img class="img-fluid" src="../Assets/bus.png">
                            </div>
                            <div class="col-md-8">
                                <div class="card-body">
                                    <h5 class="card-title">@item.CompanyName</h5>
                                    <p class="card-text">The detail information will be posted here.</p>
                                    <p class="card-text"><small class="text-body-secondary">Last updated 3 mins ago</small></p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
    </div>  
</div>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        function populateDestinationDropdown(selectedDepartureCity) {
            var allCities = @Html.Raw(Json.Serialize(Model?.RouteConfiguration?.Cities));
            var selectedDepartureCityObject = allCities.find(city => city.cityName === selectedDepartureCity);
            var destinationSelect = $('#destination');

            // Clear existing options
            destinationSelect.html('<option value="" disabled selected>Select a Destination City</option>');

            if (selectedDepartureCityObject) {
                var allRoutes = @Html.Raw(Json.Serialize(Model?.RouteConfiguration?.Routes));
                var selectedDepartureCityCode = selectedDepartureCityObject.cityCode;
                var selectedRouteObject = allRoutes.find(route => route.fromCity === selectedDepartureCityCode);

                if (selectedRouteObject && selectedRouteObject.toCity) {
                    selectedRouteObject.toCity
                        .map(toCity => ({
                            city: allCities.find(city => city.cityCode === toCity.cityCode),
                            toCity
                        }))
                        .filter(mappedCity => mappedCity.city)
                        .sort((a, b) => a.city.cityName.localeCompare(b.city.cityName, undefined, { sensitivity: 'base' }))
                        .forEach(mappedCity => {
                            destinationSelect.append($('<option>', {
                                value: mappedCity.toCity.routeId,
                                text: mappedCity.city.cityName
                            }));
                        });
                }
            }
        }

        $('#departure').change(function () {
            var selectedDepartureCity = this.value;
            populateDestinationDropdown(selectedDepartureCity);
        });
        $(document).ready(function () {
            $('#searchButton').click(function () {
                var selectedDestination = $('#destination').val();
                var selectedDestinationName = $('#destination').text();
                var selectedDeparture = $('#departure').val();
                var selectedTravelDate = $('#travelDate').val();
                if (!selectedDestination || !selectedTravelDate) {
                    // Display Bootstrap alert for 1 second and then close it
                    alert("Please select both destination and travel date.");
                    setTimeout(function () {
                        $('.alert').alert('close');
                    }, 2000);
                    return; 
                }
                var form = $('<form action="/BusSchedule/BusScheduleview" method="post"></form>');
                form.append('<input type="hidden" name="destination" value="' + selectedDestination + '">');
                form.append('<input type="hidden" name="depature" value="' + selectedDeparture + '">');
                form.append('<input type="hidden" name="travelDate" value="' + selectedTravelDate + '">');
                $('body').append(form);
                form.submit();
            });
            var initialDepartureCity = $('#departure').val();
            populateDestinationDropdown(initialDepartureCity);
        });
        $('#history').click(function (e) {
            e.preventDefault();
            var phoneNumber = localStorage.getItem("phone");
            var sessionPhone = sessionStorage.getItem("phone");
            if (phoneNumber != null || sessionPhone !=null) {
                var form = $('<form action="/History/Index" method="post"></form>');
                form.append('<input type="hidden" name="phoneNumber" value="' + phoneNumber + '">');
                $('body').append(form);
                form.submit();
            }
            else {
                alert('Please Login First');
            }
        });
    });
</script>
<partial name="_Footer" />