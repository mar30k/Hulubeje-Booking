@model HulubejeBooking.Models.BusModels.BusModel
@using HulubejeBooking.Models.BusModels
@{
    DateTime today = DateTime.Today;
    string minDate = today.ToString("yyyy-MM-dd");
    DateTime tomorro = DateTime.Today.AddDays(1);
    string tomorrow = tomorro.ToString("yyyy-MM-dd");
}
<partial name="_Navigation" />
<head>
    <title>Bus Ticket</title>
    <style>
    /* Default styling for larger screens */
    .d-flex {
        display: flex;
    }

    .select,
    .selectCity,
    #travelDate,
    #searchButton {
        margin-right: 0px;
    }

    /* Responsive styling for smaller screens */
    @@media (max-width: 500px) {
        .searchBar {
            flex-direction: column;
            margin: 10px;
        }

        .select,
        .selectCity,
        #travelDate,
        #searchButton { 
            width: 100% !important;
            margin-right: 0;
            margin-bottom: 3px;
            height: 50px !important;
        }

    }

        .operatorCards {
            text-decoration: none;
            color: black;
            cursor: pointer; /* Set default cursor to pointing cursor */
        }

            /* Custom CSS for clickable-card on hover */
            .operatorCards:hover {
                text-decoration: none; /* Remove text underline on hover */
                cursor: pointer; /* Change cursor to pointing cursor on hover */
            }
        /* Styles for the search container */
        .search-container {
            display: flex;
            align-items: center;
            width: 100%;
            max-width: 300px; /* Adjust the maximum width as needed */
            margin: 0 auto; /* Center the search bar */
            border: 1px solid #ccc;
            border-radius: 20px;
            overflow: hidden;
            transition: width 0.3s ease-in-out; /* Add animation for width changes */
        }

        /* Styles for the search input */
        .search-input {
            flex: 1;
            border: none;
            padding: 10px;
            font-size: 16px;
            outline: none;
        }

        /* Styles for the search button */
        .search-button {
            background-color: #007bff; /* Change button color as needed */
            border: none;
            padding: 10px;
            color: #fff;
            cursor: pointer;
            transition: background-color 0.3s ease-in-out; /* Add animation for color changes */
        }

            /* Change button color on hover */
            .search-button:hover {
                background-color: #0056b3; /* Change button hover color as needed */
            }

</style>
</head>
@{
    var isVaild = ViewBag.isVaild;
    var isLoggedIN = ViewBag.isLoggedIn;
}
<script>
    sessionStorage.setItem("isValid", @Json.Serialize(@isVaild));
    sessionStorage.setItem("isLoggedIn", @Json.Serialize(@isLoggedIN));
</script>
<div class="row" style="background-color:#063970;">
    <div class="container">
        <header class="container-fluid" style="padding-top: 2%;">
            <div>
                <h1 style="color: white;">Book Your Bus Journey</h1>
                <h4 style="color: white;">Discover convenient and hassle-free bus travel with our easy booking platform.</h4>
            </div>
        </header>
    </div>
    <div class="container mt-5">
        @{
            var allRoutes = Model?.RouteModel;
            var allCities = Model?.RouteModel?.Select(route => route.Routes).ToList();
        }
        <div class="d-flex searchBar" style="">
            <select class="select" style="width:100%; border-color:#FEBB02; height:60px;border-radius:5px;" id="departure" required>
                <option value="" disabled selected>Select a Departure City</option>
                @if (allRoutes is not null)
                {
                    @foreach (var city in allRoutes)
                    {
                        <option value="@city.OriginCityName">@city.OriginCityName</option>
                    }
                }
            </select>
            <select class="selectCity" style="width:100%; border-color:#FEBB02; height:60px; border-radius:5px;" id="destination" required>
                <option value="" disabled selected>Select a Destination City</option>
            </select>
            <input style="width:50%; border-color:#FEBB02; height:60px;border-radius:5px;" class="select" type="date" value="@minDate"  id="travelDate" required>
            <button id="searchButton" style="border-color:#FEBB02; " class="btn btn-primary">Search</button>
        </div> 
    </div>
</div>
<div class=" bg-light pt-2">
    <div class="container">
        <div class="search-container ">
            <input type="text" id="searchInput" class="search-input" placeholder="Search Operators" onkeyup="filterOperators()">
            <button class="search-button" onclick="filterOperators()">
                <i class="fas fa-search"></i>
            </button>
        </div>
        <div class="row">
            <div class="col-md-12 justify-content-center " id="searchMessage" style="display: none;">
                <strong>No Operators found.</strong>
            </div>
        </div>
        <div class="row mt-2">
            @if (Model?.Company is not null)
            {
                @foreach (var item in Model?.Company ?? new List<CompanyModel>())
                {
                    <div class="col-12 col-md-6 mb-3 operator">
                        <div class="card">
                            <a class="operatorCards"
                               data-operator-id="@item?.Id"
                               data-operator-tin="@item?.TIN"
                               data-operator-name="@item?.CompanyName">
                                <div class="row g-0">
                                    <div class="col-lg-4">
                                        <img class="img-fluid" src="@(item?.ImgUrl!=null? item.ImgUrl : "../Assets/bus.png")">
                                    </div>
                                    <div class="col-lg-8">
                                        <div class="card-body">
                                            <h5 class="card-title">@item?.CompanyName</h5>
                                            <p class="card-text">@item?.CityName, @item?.CountryName </p>
                                        </div>
                                    </div>
                                </div>
                            </a>
                        </div>
                    </div>
                }
            }
        </div>
    </div>
</div>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        function populateDestinationDropdown(selectedDepartureCity) {
            var destinationSelect = $('#destination');
            var allCities = @Html.Raw(Json.Serialize(Model?.RouteModel));
            var selectedDepartureCityObject = allCities.find(city => city.originCityName === selectedDepartureCity);
            var destinationCitiesList = selectedDepartureCityObject.routes;

            destinationCitiesList.sort((a, b) => a.destinationCityName.localeCompare(b.destinationCityName));

            if (destinationCitiesList) {
                destinationCitiesList.forEach(city => {
                    destinationSelect.append($('<option>', {
                        value: city.routeId,
                        text: city.destinationCityName + " Via: " + city.viaName + " - From: " + city.originTerminalName
                    }));
                });
            }
        }
        $('#departure').change(function () {
            var selectedDepartureCity = this.value;
            populateDestinationDropdown(selectedDepartureCity);
        });
        $(document).ready(function () {
            $('#searchButton').click(function () {
                var selectedDestination = $('#destination').val();
                var selectedDeparture = $('#departure').val();
                var selectedTravelDate = $('#travelDate').val();
                if (!selectedDestination || !selectedTravelDate) {
                    // Display Bootstrap alert for 1 second and then close it
                    alert("Please select both destination and travel date.");
                    setTimeout(function () {
                        $('.alert').alert('close');
                    }, 2000);
                    return; 
                }
                var form = $('<form action="/routeschedule" method="post"></form>');
                form.append('<input type="hidden" name="destination" value="' + selectedDestination + '">');
                form.append('<input type="hidden" name="depature" value="' + selectedDeparture + '">');
                form.append('<input type="hidden" name="travelDate" value="' + selectedTravelDate + '">');
                $('body').append(form);
                form.submit();
            });
            var initialDepartureCity = $('#departure').val();
            populateDestinationDropdown(initialDepartureCity);
        });
    });
    function filterOperators() {
        var input, filter, cards, card, operatorName, i, txtValue, matchFound;
        input = document.getElementById("searchInput");
        filter = input.value.toUpperCase();
        cards = document.getElementsByClassName("operator");
        matchFound = false;

        for (i = 0; i < cards.length; i++) {
            card = cards[i];
            operatorName = card.getElementsByClassName("card-title")[0];
            if (operatorName) {
                txtValue = operatorName.textContent || operatorName.innerText;
                if (txtValue.toUpperCase().indexOf(filter) > -1) {
                    card.style.display = "";
                    matchFound = true;
                } else {
                    card.style.display = "none";
                }
            }
        }

        var messageElement = document.getElementById("searchMessage");
        if (matchFound) {
            messageElement.style.display = "none";
        } else {
            messageElement.style.display = "flex";
            messageElement.style.height = "20vh";
            messageElement.style.marginTop = "25px"; // Corrected the syntax error here
        }
    }

    $(document).ready(function () {
        $('.operatorCards').on('click', function () {
            var operatorId = $(this).data('operator-id');
            var operatorTin = $(this).data('operator-tin');
            var operatorName = $(this).data('operator-name');

            console.log("operatorId "+ operatorId);
            console.log("operatorName " + operatorName);
            console.log("operatorTin " + operatorTin);
            var form = $('<form action="/operatordetail" method="post"></form>');

            form.append('<input type="hidden" name="operatorId" value="' + operatorId + '" />');
            form.append('<input type="hidden" name="operatorName" value="' + operatorName + '" />');
            form.append('<input type="hidden" name="operatorTin" value="' + operatorTin + '" />');

            $('body').append(form);

            form.submit();
        });

    });
</script>
<partial name="_Footer" />