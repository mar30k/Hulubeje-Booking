@model HulubejeBooking.Models.CInemaModels.ProductsViewModel
@using HulubejeBooking.Models.CInemaModels
@using Microsoft.AspNetCore.Http
@using Newtonsoft.Json
@using System.Globalization
@using System.Text.RegularExpressions
<html lang="en">
<head>
    <title>Produts</title>
    <style>
/*         .custom-container {
            padding-left: 35px;
            padding-right: 35px;
        }
 */
        .btn:focus,
        .btn:active {
            outline: none !important;
            box-shadow: none !important;
        }

        .card-img-top {
            height: 240px;
            width: 100%;
            object-fit: cover;
        }

        .btn-circle {
            width: 30px;
            height: 30px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 0;
            font-size: 14px;
        }
        .selected-item-container-partial{
            margin-top: 20px;
            border: 1px solid #ddd;
            padding: 10px;
            border-radius: 5px;
        }

        #selected-items-container
         {
            margin-top: 20px;
            border: 1px solid #ddd;
            padding: 10px;
            border-radius: 5px;
        }

            #total-price-container{
            margin-top: 10px;
            padding-top: 5px; 
            }

        .taxCalculator {
            margin-top: 20px;
            border: 1px solid #ddd;
            padding: 10px;
            border-radius: 5px;
        }

        .dotted-line {
            border-bottom: 1px dashed #000;
            width: 100%;
            margin-top: 5px;
        }

        .Details {
            margin-top: 20px;
            border: 1px solid #f2e4;
            padding: 10px;
            border-radius: 5px;
        }

        .Movie{
            margin-bottom: 5px;
            padding: 5px;
            background-color: #f0f0f0;
            border: 1px solid #ccc;
            border-radius: 3px;
        }
        .selected-item {
            margin-bottom: 5px;
            padding: 5px;
            background-color: #f0f0f0;
            border: 1px solid #ccc;
            border-radius: 3px;
        }
        .selected-item-partial{
            margin-bottom: 5px;
            padding: 5px;
            background-color: #E5FFCC;
            border: 1px solid #ccc;
            border-radius: 3px;
        }
        .total-price {
            margin-bottom: 5px;
            padding: 5px;
            background-color: #c2e3f1;
            border: 1px solid #ccc;
            border-radius: 3px;
        }

        /* .btn-outline-primary {
            color: #28a745;
            border-color: #28a745;
        } 
            .btn-outline-primary:hover {
                background-color: #28a745; 
                color: #fff;
            } */

        @@media (max-width: 576px) {
            .col-lg-3 {
                width: 100%;
            }
        }

        .card {
            position: relative;
            box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);
            height: 100%;
            width: 100%;
            text-align: center;
        }

    </style>
</head>
@{
    var isVaild = ViewBag.isVaild;
    var isLoggedIN = ViewBag.isLoggedIn;
}
<script>
    sessionStorage.setItem("isValid", @Json.Serialize(@isVaild));
    sessionStorage.setItem("isLoggedIn", @Json.Serialize(@isLoggedIN));
</script>
<partial name="_Navigation" />
<body class="bg-light">
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
            <div class="container-fluid">
                <div class="d-flex justify-content-between align-items-center w-100 ">
                    <div class="Popcorn d-inline-flex">
                        <h4 class="px-3 py-2" style="margin-top: 3px; ">Food And Beverage</h4>
                    </div>
                    <div>
                        @*<div style="text-align: center; display: inline-block; margin-right: 20px; margin-top: 3px;" id="priceContainer">
                            <button id="skipButton" class="btn btn-outline-primary">Skip</button>
                        </div> *@
                        <div id="UpdatedCountDownTimer" style="display:none; display: inline-block; margin-right: 10px; margin-top: 3px;"></div>
                    </div>
                </div>
            </div>
        </nav>
    </header>
    <div class="custom-container" style="position: relative; padding-right: 0; padding-left: 0">
        <div class="row mb-3">
            <div class="col-lg-9 mb-3 mt-3">
                @if (Model?.FoodItem?.Data != null && Model.FoodItem.Data.Any())
                {
                    <div class="container">
                        <div class="row">
                            @foreach (var product in Model?.FoodItem?.Data ?? new List<FoodCategory>())
                            {
                                @if (product.Children != null && product.Children.Any())
                                {
                                    var categoryProducts = product.Children.ToList();
                                    for (int i = 0; i < categoryProducts.Count; i++)
                                    {
                                        var categoryProduct = categoryProducts[i];

                                        <div class="col-lg-12 mb-3">
                                            <h5>@categoryProduct.Name</h5>
                                        </div>

                                        @if (categoryProduct.Children != null && categoryProduct.Children.Any())
                                        {
                                            foreach (var articleProduct in categoryProduct.Children)
                                            {
                                                <div class="col-lg-3 col-md-4 col-sm-6 col-6 mb-3">
                                                    <div class="card selectable-card">
                                                        <img src="@articleProduct?.Pictures?.FirstOrDefault()" class="card-img-top">
                                                        <div class="card-body" style="display: flex; flex-direction: column; align-items: center;">
                                                            <h6 class="card-title">@articleProduct?.Name</h6>
                                                            <p class="card-text" style="margin: 0; text-align: center;">@String.Format("{0:0.00}", articleProduct?.Price) Birr</p>
                                                            <p class="article" style="display: none;">@articleProduct?.Code</p>

                                                            <div class="quantity-control " style="margin-top: 5px; text-align: center; display: none !important;">
                                                                <button class="btn btn-outline-danger btn-circle" style="padding: 6px; font-size: 12px;" onclick="decrementValue(this)">-</button>
                                                                <p class="quantity" style="padding: 5px; font-size: 12px; margin: 0 ;">0</p>
                                                                <button class="btn btn-outline-primary btn-circle" style="padding: 6px; font-size: 12px; border-color: #28a745;" onclick="incrementValue(this)">+</button>
                                                            </div>

                                                            <!-- Show Button -->
                                                            <button class="btn btn-sm btn-outline-primary addToCart" style="margin-top: 5px;" onclick="showQuantityControl(this)">Add to Cart</button>
                                                        </div>
                                                    </div>
                                                </div>
                                            }
                                        }
                                        @if (i < categoryProducts.Count - 1)
                                        {
                                            <div class="col-12">
                                                <hr class="d-sm-none">
                                            </div>
                                        }
                                    }
                                }
                            }
                        </div>
                    </div>
                }
                else
                {
                    <p>No Products Available</p>
                }
            </div>
            <div class="container col mt-3 mr-2" @*style="margin-right: 50px;" *@>
                <div id="BillContainer" style="display:none;">
                    <partial name="_Bill" />
                </div>
                <div id="selected-items-container">
                    <div class="header mb-3" style="display: flex; justify-content: space-between; padding: 5px; background-color: black; color: white;">
                        <span style="flex: 2 1 0%;">Description</span>
                        <span style="flex: 1 1 0%;">Qty</span>
                        <span style="flex: 1 1 0%;">Price</span>
                        <span style="flex: 1 1 0%;text-align: right;">Amount</span>
                    </div>
                    @{
                        // Assuming Model?.NumberOfSeats is a string
                        int numberOfSeats;
                        if (int.TryParse(Model?.Seats, out int result))
                        {
                            // Conversion successful
                            numberOfSeats = result;
                        }
                        else
                        {
                            // Conversion failed, provide a default value (e.g., 0)
                            numberOfSeats = 0;
                        }

                        decimal totalAmount = Model != null ? Model.Price * numberOfSeats : 0;
                    }

                    <div class="Movie" style="display: flex; justify-content: space-between; padding: 5px">
                        @{
                            var decodedMovieName = Regex.Unescape(Model?.MovieName ?? "");
                        }
                        <span style="flex: 2 1 0%;">@decodedMovieName [Movie]</span>
                        <span style="flex: 1 1 0%">@Model?.Seats</span>
                        <span style="flex: 1 1 0%">@String.Format("{0:0.00}", @Model?.Price) $</span>
                        <span style="flex: 1 1 0%; text-align: right;"> @String.Format("{0:0.00}", @totalAmount) $</span>
                    </div>
                </div>
                <div id="total-price-container" style="display: none">
                </div>
                <script>
                    $(document).ready(function () {
                        var selectedSeatNamesJson = sessionStorage.getItem('selectedSeatNames');
                        var selectedSeatNamesArray = selectedSeatNamesJson ? JSON.parse(selectedSeatNamesJson) : [];
                        var selectedSeatJson = sessionStorage.getItem('selectedSeats');
                        var selectedSeatArray = selectedSeatJson ? JSON.parse(selectedSeatJson) : [];
                        var numberOfSelectedSeats = selectedSeatArray.length;
                        var selectedSeatsSpan = document.getElementById('selectedSeatsSpan');
                        if (selectedSeatsSpan) {
                            if (numberOfSelectedSeats >= 1) {
                                selectedSeatsSpan.innerText = "[ " + selectedSeatNamesArray.join(', ') + " ]"; // Join array elements with a comma and space
                            } else {
                                selectedSeatsSpan.innerText = "No Seats Selected"; // Join array elements with a comma and space
                            }
                        }
                    });
                </script>
                <div class="Details" style="display: flex; flex-wrap: wrap; justify-content: space-between; padding: 5px; margin-bottom: 5px;">
                    @if (Model is not null)
                    {
                        <div style="flex: 0 0 100%; margin: 5px; display: flex; justify-content: space-between;">
                            <span style="flex: 2 1 0%; text-align: left; margin-right: auto;">Movie</span>
                            <span style="text-align: right;margin-right: 10px">@Model.MovieName</span>
                        </div>
                        <div style="flex: 0 0 100%; margin: 5px; display: flex; justify-content: space-between;">
                            <span style="flex: 2 1 0%; text-align: left; margin-right: auto;">Schedule Date</span>
                            @if (Model.ScheduleDate is not null)
                            {
                                <span style="text-align: right;margin-right: 10px">@GetFormattedDateWithDayOfWeek(@Model.ScheduleDate.ToString())</span>
                            }
                        </div>
                        <div style="flex: 0 0 100%; margin: 5px; display: flex; justify-content: space-between;">
                            <span style="flex: 2 1 0%; text-align: left; margin-right: auto;">Schedule Time</span>
                            @if (Model.ScheduleTime is not null)
                            {
                                <span style="text-align: right;margin-right: 10px">@Model.ScheduleTime (@GetEthiopianTime(@Model.ScheduleTime) LT)</span>
                            }
                        </div>
                        <div style="flex: 0 0 100%; margin: 5px; display: flex; justify-content: space-between;">
                            <span style="flex: 2 1 0%; text-align: left; margin-right: auto;">Hall</span>
                            <span style="text-align: right;margin-right: 10px">@Model.HallName</span>
                        </div>

                        <div style="flex: 0 0 100%; margin: 5px; display: flex; justify-content: space-between;">
                            <span style="flex: 2 1 0%; text-align: left; margin-right: auto;">Dimension</span>
                            <span style="text-align: right; margin-right: 10px">@Model.Dimension</span>
                        </div>
                        <div style="flex: 0 0 100%; margin: 5px; display: flex; justify-content: space-between;">
                            <span style="flex: 2 1 0%; text-align: left; margin-right: auto;">Seleceted Seats</span>
                            <span id="selectedSeatsSpan" style="text-align: right; margin-right: 10px"></span>
                        </div>
                    }
                </div>
                @functions {
                    public string GetFormattedDateWithDayOfWeek(string? date)
                    {
                        DateTime parsedDate;
                        if (DateTime.TryParse(date, out parsedDate))
                        {
                            string dayOfWeek = parsedDate.ToString("ddd, MMM dd yyyy"); // Get abbreviated day of the week

                            return $"{dayOfWeek}";
                        }

                        return string.Empty;
                    }

                    public string GetEthiopianTime(string? utcTimeString)
                    {
                        // Specify the expected format of the time string
                        string format = "h.mm tt";

                        if (DateTime.TryParseExact(utcTimeString, format, CultureInfo.InvariantCulture, DateTimeStyles.None, out DateTime utcTime))
                        {

                            DateTime ethiopianTime = utcTime.AddHours(utcTime.ToString("tt").Equals("AM") ? 6 : -6);

                            return ethiopianTime.ToString("h.mm tt");
                        }

                        return "Invalid time format";
                    }
                }
                <button style="text-align: center" class="btn btn-sm btn-primary mt-2" id="showBillButton">Calculate Bill</button>
                <button style="text-align: center; display: none" class="btn btn-sm btn-success mt-2" id="confirmButton">Confirm</button>
            </div>
        </div>
    </div>
    <script>
        var storedRemainingTime = sessionStorage.getItem('remainingTime');
        var countdownStarted = sessionStorage.getItem('countdownStarted') === 'true';
        var secondsAdded = sessionStorage.getItem('secondsAdded') === 'true';

        var updatedRemainingTime;
        $(document).ready(function () {
            var entryData = {
                key: "@Model?.SeatCacheKey",
                extensionDeligate: "on_invoice",
                extension: 60
            };
            if (countdownStarted) {
                $.ajax({
                    url: '/CinemaSeatLayout/EntryExtensions',
                    method: "POST",
                    data: JSON.stringify(entryData),
                    contentType: 'application/json',
                    success: function (response) {
                        updatedRemainingTime = parseInt(response);
                        if (updatedRemainingTime > 0) {
                            startCountdownTimer(updatedRemainingTime);
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error("Error fetching seat status:", error);
                    }
                });
            }
        });


        var seatCacheKey = "@Model?.SeatCacheKey";
        var movieScheduleCode = "@Model?.MovieScheduleCode";

        sessionStorage.setItem('seatCacheKey', seatCacheKey);

        var selectedSeats = JSON.parse(sessionStorage.getItem('selectedSeats')) || [];


        const showBillButton = document.getElementById('showBillButton');
        const confirmButton = document.getElementById('confirmButton');
        showBillButton.addEventListener('click', function () {
            var billContainer = document.getElementById('BillContainer');
            var selectedItemsContainer = document.getElementById('selected-items-container');
            var totalpricecontainer = document.getElementById('total-price-container');

            // Toggle between showing BillContainer and selected-items-container
            if (billContainer.style.display === 'none') {
                billContainer.style.display = 'block';
                selectedItemsContainer.style.display = 'none';
                totalpricecontainer.style.display = 'none';
                bill();
                showBillButton.style.display = 'none';
            } 
        });

        function bill() {
            
            var movieName = "@Model?.MovieName";
            var seatCacheKey = "@Model?.SeatCacheKey";
            var companyCode = "@Model?.CompanyCode";
            var branchCode = "@Model?.BranchCode";
            var moviePrice = "@Model?.Price";
            var movieScheduleCode = "@Model?.MovieScheduleCode";
            var companyTin = "@Model?.CompanyTinNumber";
            var movieArticleCode = "@Model?.ArticleCode";
            var numberOfSeats = "@Model?.Seats";
            var hallName = "@Model?.HallName";
            var company = "@Model?.CompanyName";
            var time = "@Model?.ScheduleTime";
            var date = "@Model?.ScheduleDate";
            var movieDimension = "@Model?.Dimension";
            console.log(selectedItems);
            $.get("/CalculateBill", {
                movieName: movieName,
                companyCode: companyCode,
                branchCode: branchCode,
                hallName: hallName,
                company: company,
                time: time,
                date: date,
                movieDimension: movieDimension,
                moviePrice: moviePrice,
                movieScheduleCode: movieScheduleCode,
                companyTin: companyTin,
                movieArticleCode: movieArticleCode,
                numberOfSeats: numberOfSeats,
                seatCacheKey: seatCacheKey,
                selectedItems: JSON.stringify(selectedItems),
            }, function (data) {
                $("#BillContainer").html(data);
                confirmButton.style.display = 'block';
            });
        }
        function startCountdownTimer() {
            $('#UpdatedCountDownTimer').show();
            countdownInterval = setInterval(function () {
                $('#UpdatedCountDownTimer').text("Time remaining: " + formatTime(updatedRemainingTime));
                updatedRemainingTime--;

                if (updatedRemainingTime <= 0) {
                    clearInterval(countdownInterval);
                    alert("Booking time expired. Please restart the booking process.");
                    sessionStorage.clear();
                    window.location.href = '@Url.Action("Index","Cinema")';
                }
            }, 1000);
        }


        function formatTime(seconds) {
            var min = Math.floor(seconds / 60);
            var sec = seconds % 60;
            return min + ":" + (sec < 10 ? "0" : "") + sec;
        }




        const selectedItemsContainer = document.getElementById('selected-items-container');
        const totalpricecontainer = document.getElementById('total-price-container');
        const selectedItems = [];

        function showQuantityControl(button) {

            // Find the parent card element
            var cardBody = button.closest('.card-body');

            // Toggle visibility of quantity control and show button
            var quantityControl = cardBody.querySelector('.quantity-control');
            quantityControl.style.display = quantityControl.style.display === 'flex' ? 'none' : 'flex';

            button.style.display = quantityControl.style.display === 'none' ? 'inline-block' : 'none';
            incrementValue(button);
        }

        function incrementValue(button) {
            var billContainer = document.getElementById('BillContainer');
            var selectedItemsContainer = document.getElementById('selected-items-container');
            var showBillButton = document.getElementById('showBillButton');
            var cardBody = button.closest('.card-body');

            // Toggle visibility of quantity control and show button
            var quantityControl = cardBody.querySelector('.quantity');
            if (quantityControl) {
                var currentValue = parseInt(quantityControl.textContent, 10) || 0;
                quantityControl.textContent = currentValue + 1;
                updateCardDisplay(quantityControl);
                billContainer.style.display = 'none';
                selectedItemsContainer.style.display = 'block';
                showBillButton.style.display = 'block';
                confirmButton.style.display = 'none';
            }
        }


        function decrementValue(button) {
            var cardBody = button.closest('.card-body');
            var billContainer = document.getElementById('BillContainer');
            var selectedItemsContainer = document.getElementById('selected-items-container');
            var showBillButton = document.getElementById('showBillButton');
            // Toggle visibility of quantity control and show button
            var quantityControl = cardBody.querySelector('.quantity');
            if (quantityControl) {
                var currentValue = parseInt(quantityControl.textContent, 10) || 0;
                if (currentValue > 1) {
                    quantityControl.textContent = currentValue - 1;
                    updateCardDisplay(quantityControl);
                    billContainer.style.display = 'none';
                    selectedItemsContainer.style.display = 'block';
                    showBillButton.style.display = 'block';
                    confirmButton.style.display = 'none';
                } else if (currentValue-1 <= 0) {
                    billContainer.style.display = 'none';
                    selectedItemsContainer.style.display = 'block';
                    showBillButton.style.display = 'block';
                    confirmButton.style.display = 'none';
                    quantityControl.textContent = 0;
                    updateCardDisplay(quantityControl);
                    var cardBody = button.closest('.card-body');
                    var quantityControl = cardBody.querySelector('.quantity-control');
                    var addToCart = cardBody.querySelector('.addToCart');
                    quantityControl.style.display = "none";
                    addToCart.style.display = "inline-block";
                }
            }
        }


        function updateCardDisplay(quantityElement) {
            var cardContainer = quantityElement.closest('.card-body');
            var cardTitle = cardContainer.querySelector('.card-title');
            var cardText = cardContainer.querySelector('.card-text');
            var article = cardContainer.querySelector('.article');

            var itemName = cardTitle.textContent;
            var itemPrice = parseFloat(cardText.textContent);
            var itemArticleCode = article.textContent;

            var quantity = parseInt(quantityElement.textContent, 10);

            if (quantity > 0) {

                var existingItem = selectedItems.find(item => item.name === itemName);

                if (!existingItem) {
                    selectedItems.push({ name: itemName, quantity: quantity, unitAmount: itemPrice, article: itemArticleCode });
                } else {
                    existingItem.quantity = quantity;
                    existingItem.unitAmount = itemPrice;
                }
            } else {
                    selectedItems.splice(selectedItems.findIndex(item => item.name === itemName), 1);
            }
            renderSelectedItems();
        }

        function renderSelectedItems() {
            var numberOfElements = '@Model?.Seats';
            var movieName = '@Model?.MovieName';
            var moviePrice = '@Model?.Price';
            var totalAmount = moviePrice * numberOfElements;

            var newContent = `
                    <div class="header mb-3" style="display: flex; justify-content: space-between; padding: 5px; background-color: black; color: white;">
                        <span style="flex: 2 1 0%;">Description</span>
                        <span style="flex: 1 1 0%;">Qty</span>
                        <span style="flex: 1 1 0%;">Price</span>
                        <span style="flex: 1 1 0%;text-align: right;">Amount</span>
                    </div>
                    <div class="Movie" style="display: flex; justify-content: space-between; padding: 5px">
                        <span style="flex: 2 1 0%;">${movieName} [Movie]</span>
                        <span style="flex: 1 1 0%">${numberOfElements}</span>
                        <span style="flex: 1 1 0%">${moviePrice} $</span>
                        <span style="flex: 1 1 0%; text-align: right;">${totalAmount.toFixed(1)} $</span>
                    </div>
                `;
            selectedItemsContainer.innerHTML = newContent;
            var totalPrice = @Model?.Seats === 0 ? 0 : @Model?.Price;
            let totalCount = @Model?.Seats;
            totalpricecontainer.innerHTML = '';
            selectedItems.forEach(item => {
                // item.unit price is used for total amount and 
                item.price = item.quantity > 0 ? item.unitAmount * item.quantity : 0;
                var itemDiv = document.createElement('div');
                itemDiv.className = 'selected-item';
                itemDiv.style.display = 'flex';
                itemDiv.style.justifyContent = 'space-between';
                itemDiv.style.padding = '5px';

                var nameSpan = document.createElement('span');
                var quantitySpan = document.createElement('span');
                var unitPriceSpan = document.createElement('span'); // New span for unit price
                var priceSpan = document.createElement('span');

                nameSpan.textContent = item.name;
                nameSpan.style.flex = '2';

                quantitySpan.textContent = item.quantity;
                quantitySpan.style.flex = '1';

                unitPriceSpan.textContent = `${item.unitAmount.toFixed(2)} $`; // Display unit price
                unitPriceSpan.style.flex = '1';

                priceSpan.textContent = `${item.price.toFixed(2)} $`;
                priceSpan.style.flex = '1';
                priceSpan.style.textAlign = 'right';

                itemDiv.appendChild(nameSpan);
                itemDiv.appendChild(quantitySpan);
                itemDiv.appendChild(unitPriceSpan); // Append the unit price span
                itemDiv.appendChild(priceSpan);

                selectedItemsContainer.appendChild(itemDiv);

                totalPrice += item.unitAmount;
                totalCount += item.quantity;
                totalAmount += item.price;   //unit price is used for total amount for a specific item i.e item.price * item.quantity
            });
            var totalDiv = document.createElement('div');
            totalDiv.className = 'total-price';

            if (selectedItems.length > 0) {
                totalDiv.style.display = 'flex';
                totalDiv.style.justifyContent = 'space-between';
                totalDiv.style.padding = '5px';
                totalDiv.style.marginTop = '5px';

                var totalPrcieSpan = document.createElement('span');
                var totalCountSpan = document.createElement('span');
                var totalItemAmount = document.createElement('span');
                var totalValueSpan = document.createElement('span');

                totalPrcieSpan.textContent = 'Total Price';
                totalPrcieSpan.style.flex = '2';

                totalItemAmount.style.flex = '1';
                totalItemAmount.textContent = `${totalAmount.toFixed(2)}$`;

                totalCountSpan.textContent = `${totalCount}`;
                totalCountSpan.style.flex = '1';

                totalValueSpan.textContent = `${totalPrice.toFixed(2)} $`;
                totalValueSpan.style.flex = '1';
                totalItemAmount.style.textAlign = 'right';

                totalDiv.appendChild(totalPrcieSpan);
                totalDiv.appendChild(totalCountSpan);
                totalDiv.appendChild(totalValueSpan);
                totalDiv.appendChild(totalItemAmount);
            } else {
                totalDiv.style.display = 'none';
            }
            totalpricecontainer.style.display = 'block';
            totalpricecontainer.appendChild(totalDiv);
        }
    </script>
</body>
</html>
<partial name="_Footer" />