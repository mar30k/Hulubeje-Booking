@model HulubejeBooking.Models.CInemaModels.ProductsViewModel
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
</head>
<div class="selected-item-container-partial">
    <div class="header" style="display: flex; justify-content: space-between; padding: 5px; background-color: black; color: white; margin-bottom: 10px;">
        <span style="flex: 2 1 0%;">Description</span>
        <span style="flex: 1 1 0%;">Qty</span>
        <span style="flex: 1 1 0%;">Price</span>
        <span style="flex: 1 1 0%; text-align: right;">Amounts</span>
    </div>
    <div style="display: flex; flex-wrap: wrap; justify-content: space-between; padding: 5px; margin-bottom: 5px;">
        @if (Model?.Bill?.LineItems != null)
        {
            var reversedLineItems = Model.Bill.LineItems.ToList();
            reversedLineItems.Reverse();

            foreach (var lineItem in reversedLineItems)
            {
                <div class="selected-item-partial" style="flex: 0 0 100%;  display: flex; justify-content: space-between;">
                    <span style="flex: 2 1 0%;">@(lineItem?.Name)</span>
                    <span style="flex: 1 1 0%;">@(lineItem?.Quantity)</span>
                    <span style="flex: 1 1 0%;">@(lineItem?.UnitPrice)</span>
                    <span style="flex: 1 1 0%;text-align: right;">@(lineItem?.TotalAmount)</span>
                </div>
            }
        }
    </div>
</div>
<div class="taxCalculator" style="display: flex; flex-wrap: wrap; justify-content: space-between; padding: 5px; margin-bottom: 5px;">
    <div style="flex: 0 0 100%; margin: 5px; display: flex; justify-content: space-between;">
        <span style="flex: 2 1 0%; text-align: left; margin-right: auto;">ADDITIONAL CHARGE</span>
        <span style="text-align: right;margin-right: 10px">@Model?.Bill?.Extras?.AdditionalCharge</span>
    </div>
    <div style="flex: 0 0 100%; margin: 5px; display: flex; justify-content: space-between;">
        <span style="flex: 2 1 0%; text-align: left; margin-right: auto;">DISCOUNT</span>
        <span style="text-align: right;margin-right: 10px">@Model?.Bill?.Extras?.Discount</span>
    </div>
    <div style="flex: 0 0 100%; margin: 5px; display: flex; justify-content: space-between;">
        <span style="flex: 2 1 0%; text-align: left; margin-right: auto;">SUBTOTAL</span>
        <span style="text-align: right;margin-right: 10px">@Model?.Bill?.Extras?.SubTotal</span>
    </div>
    <div style="flex: 0 0 100%; margin: 5px; display: flex; justify-content: space-between;">
        <span style="flex: 2 1 0%; text-align: left; margin-right: auto;">TAX1</span>
        @if (Model?.Bill?.TaxInformation != null)
        {
            @foreach (var taxInfo in Model.Bill.TaxInformation)
            {
                <span style="text-align: right; margin-right: 10px">@taxInfo?.TaxAmount</span>
            }
        } 
    </div>
    <div class="dotted-line"></div>
    <div style="flex: 0 0 100%; margin: 5px; display: flex; justify-content: space-between;">
        <span style="flex: 2 1 0%; text-align: left; margin-right: auto;"><strong>GRAND TOTAL</strong></span>
        <span style="text-align: right; margin-right: 10px">Total Amount: @(Model?.Bill?.TotalAmount.ToString("F2") ?? "N/A")</span>
    </div>
</div>
@* @{
    var specialFlagItems = Model?.Bill?.LineItems?.FindAll(item => item.SpecialFlag == "@CNET_MOVIE_PRODUCT");

    if (specialFlagItems != null && specialFlagItems.Any())
    {
        foreach (var taxinfo in specialFlagItems)
        {
            var TaxAmount = taxinfo.TaxAmount;
            var TotalAmount = taxinfo.TotalAmount;
            var TaxType = taxinfo.TaxType;
            var TaxableAmount = taxinfo.TaxableAmount;
            var UnitPrice = taxinfo.UnitPrice;
            var Quantity = taxinfo.Quantity;
            var LineItemNote = taxinfo.LineItemNote;
            var SpecialFlag = taxinfo.SpecialFlag;
            var Code = taxinfo.Code;
        }   
    }
    var Schedule = Model?.MovieScheduleCode;
    var GrandTotal = Model?.Bill?.Extras?.SubTotal;
    var OrgTin = Model?.CompanyTinNumber;
    var OrgUnitDef = Model?.BranchCode;
} *@
<script>
    $('#confirmButton').on('click', function () {
    var cinemaArticles = @Html.Raw(Json.Serialize(Model?.Bill?.LineItems?.FindAll(item => item.SpecialFlag == "@CNET_MOVIE_PRODUCT")));
    var selectedSeats = JSON.parse(sessionStorage.getItem('selectedSeats')) || [];
    var selectedSeatNames = JSON.parse(sessionStorage.getItem('selectedSeatNames')) || [];
    var data = {
        AuthorizePaymentData: {
            UserMobileNumber: "0912141914",
            SupplierTin: '@Model?.CompanyTinNumber',
            SupplierOUD: '@Model?.BranchCode',
            Amount: '@Model?.Bill?.TotalAmount'
        },
        CinemaDetailsData: {
            Consignee: "0912141914",
            MovieSchedule: '@Model?.MovieScheduleCode',
            GrandTotal: '@Model?.Bill?.TotalAmount',
            OrgTin: '@Model?.CompanyTinNumber',
            OrgUnitDef: '@Model?.BranchCode',
            SeatsToBook: selectedSeats,
            CinemaArticles: cinemaArticles.map(function (taxinfo) {
                var cinemaArticleData = {
                    TaxAmount: taxinfo.taxAmount,
                    TotalAmount: taxinfo.totalAmount,
                    TaxType: taxinfo.taxType,
                    TaxableAmount: taxinfo.taxableAmount,
                    UnitPrice: taxinfo.unitPrice,
                    Quantity: taxinfo.quantity,
                    LineItemNote: taxinfo.lineItemNote,
                    SpecialFlag: taxinfo.specialFlag,
                    Code: taxinfo.code,
                };
                return cinemaArticleData;
            }),
            OnBookSuccess: {
                seats: selectedSeatNames,
                movieName: '@Model?.MovieName',
                movieDimension: '@Model?.Dimension',
                company: '@Model?.CompanyName',
                time: '@Model?.ScheduleTime',
                date: '@Model?.ScheduleDate',
                hallName: '@Model?.HallName',
                items: [
                    @if (Model?.SelectedItems != null)
                    {
                        for (var i = 0; i < Model?.SelectedItems.Count; i++)
                        {
                            <text>"@Model?.SelectedItems[i].articleName"</text>
                            if (i < Model?.SelectedItems.Count - 1)
                            {
                                <text>,</text>
                            }
                        }
                    }
                ],
            },
        },
    };

    console.log('Data Object:', data);

    $.ajax({
        url: '/PaymentHome/Index',
        type: 'POST',
        contentType: 'application/json',
        data: JSON.stringify(data),
        success: function (/* response */) {
            window.location.href = "/PaymentOptions/PaymentOption";
        },
        error: function (error) {
            console.error('Error:', error);
        }
    });
    $.ajax({
        url: '/SHotelpayment/Payment',
        type: 'POST',
        contentType: 'application/json',
        data: JSON.stringify(data),
        success: function () {
        },
        error: function (error) {
            console.error('Error:', error);
        }
    });
});
</script>