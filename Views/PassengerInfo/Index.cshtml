@using System.Text.RegularExpressions
@model HulubejeBooking.Models.BusModels.VwRouteSchedule
<partial name="_Navigation" />
<head>
    <style>
        .passenger-container {
            margin-bottom: 10px;
        }

        body {
            display: flex;
            flex-direction: column;
            min-height: 100vh;
            margin: 0;
        }

        .passenger-content {
            padding: 10px;
            border: 1px solid #ddd;
        }

        .footer {
            background-color: #f8f9fa;
            padding: 10px;
            text-align: center;
        }

        .form-group label {
            width: 150px;
            margin-right: 10px;
        }

        .form-group select {
            display: inline-block;
            vertical-align: middle;
            width: 40%;
        }

        .gender {
            display: inline-block;
            vertical-align: middle;
        }

        .extra-small-asterisk {
            font-size: 10px; /* Adjust the size as needed */
        }
    </style>
    <title>Passenger Information</title>
</head>
<body>
    <div class="row mt-3 mb-4">
        <div class="col-lg-9">
            <div class="content">
                <div class="container">
                    <h1>Passenger Information</h1>

                    <form method="post" action="/confirmation">
                        @for (int i = 1; i <= Model.NoOfSeat; i++)
                        {
                            <div class="passenger-container mb-3">
                                <details open @* @(i == 1 ? "open" : "") *@>
                                    <summary>Passenger @i - (Seat @GetSeatName(i))</summary>
                                    <div class="passenger-content">
                                        <div class="gender form-group mb-1">
                                            <label for="firstName">First name<span style="color: red; margin-left: 5px;"><i class="fas fa-asterisk extra-small-asterisk"></i></span></label>
                                            <input type="text" name="Passengers[@(i - 1)].FirstName" required style="width: 250px;" value="markos">
                                        </div>
                                        <div class="gender form-group mb-1">
                                            <label for="middleName">Middle Name<span style="color: red; margin-left: 5px;"><i class="fas fa-asterisk extra-small-asterisk"></i></span></label>
                                            <input type="text" name="Passengers[@(i - 1)].MiddleName" required style="width: 250px;" value="beyene">
                                        </div>
                                        <div class="gender form-group mb-1">
                                            <label for="lastName">Last Name<span style="color: red; margin-left: 5px;"><i class="fas fa-asterisk extra-small-asterisk"></i></span></label>
                                            <input type="text" name="Passengers[@(i - 1)].LastName" required style="width: 250px;" value="giday">
                                        </div>
                                        <div class="form-group mb-1">
                                            <label for="passengerId">Id Number<span style="color: red; margin-left: 5px;"><i class="fas fa-asterisk extra-small-asterisk"></i></span></label>
                                            <input type="text" name="Passengers[@(i - 1)].PassengerId" required value="sfas">
                                        </div>
                                        <div class="form-group mb-1">
                                            <label for="dob">Date of Birth<span style="color: red; margin-left: 5px;"><i class="fas fa-asterisk extra-small-asterisk"></i></span></label>
                                            <input type="date" name="Passengers[@(i - 1)].DOB" required value="2000-07-07">
                                        </div>
                                        <div class="form-group mb-1">
                                            <label for="nationality">Nationality</label>
                                            <select class="form-select" name="Passengers[@(i - 1)].Nationality" id="nationality">
                                                @*                                                 @foreach (var country in GetCountries())
                                            {
                                            if (country == "Ethiopia")
                                            {
                                            <option selected>@country</option>
                                            }
                                            else
                                            {
                                            <option>@country</option>
                                            }
                                            } *@
                                                <option selected>Ethiopian</option>
                                                <option>Eritrean</option>
                                            </select>
                                        </div>
                                        <div class="form-group mb-1">
                                            <label>Gender<span style="color: red; margin-left: 5px;"><i class="fas fa-asterisk extra-small-asterisk"></i></span> </label>
                                            <div class="gender">
                                                <input type="radio" id="male_@i" name="Passengers[@(i - 1)].Gender" value="Male" required checked>
                                                <label for="male_@i">Male</label>

                                                <input type="radio" id="female_@i" name="Passengers[@(i - 1)].Gender" value="Female" required>
                                                <label for="female_@i">Female</label>
                                            </div>
                                        </div>

                                        <div class="form-group mb-1">
                                            <label for="phoneNumber">Phone Number<span style="color: red; margin-left: 5px;"><i class="fas fa-asterisk extra-small-asterisk"></i></span></label>
                                            <input type="tel" name="Passengers[@(i - 1)].PhoneNumber" required value="0912141914">
                                        </div>

                                        <div class="form-group mb-1">
                                            <label for="email">Email:</label>
                                            <input type="email" name="Passengers[@(i - 1)].Email" value="markosbeyene1@gmail.com">
                                        </div>
                                    </div>
                                </details>
                            </div>
                        }
                        @{
                            var selectedButtonsId = Model.SeatId; /* as List<string>; */
                            if (selectedButtonsId is not null)
                            {
                                foreach (var item in selectedButtonsId)
                                {
                                    <input type="hidden" name="seatId" value="@item">
                                }
                            }
                        }
                        <input type="hidden" name="Tariff" value="@Model?.Amount">
                        @for (int i = 0; i < Model?.SeatName?.Count; i++)
                        {
                            <input type="hidden" name="seatName[@i]" value="@Model.SeatName[i]" />
                        }
                        <input type="hidden" name="Distance" value="@Model?.Distance">
                        <input type="hidden" name="via" value="@Model?.ViaDescription">
                        <input type="hidden" name="OriginTerminalName" value="@Model?.OriginTerminalName">
                        <input type="hidden" name="vehicleOperatorId" value="@Model?.VehicleOperatorId">
                        <input type="hidden" name="routeScheduleId" value="@Model?.Id">
                        <input type="hidden" name="DepatureCity" value="@Model?.DepatureCity">
                        <input type="hidden" name="DestinationCity" value="@Model?.DestCityName">
                        <input type="hidden" name="Terminal" value="@Model?.Terminal">
                        <input type="hidden" name="OperatorName" value="@Model?.OperatorName">
                        <input type="hidden" name="Date" value="@Model?.Date">
                        <input type="hidden" name="PlateNumber" value="@Model?.PlateNumber">
                        <input type="hidden" name="ArrivalDate" value="@Model?.ArrivalDate">
                        <input type="hidden" name="DepartureDate" value="@Model?.DepartureDate">
                        <input type="hidden" name="DestinationTermianl" value="@Model?.DestinationTerminalName">
                        <button class="btn btn-primary" type="submit">Submit</button>
                    </form>
                </div>
            </div>
        </div>
        <div class="col-3  mt-2">
            <div class="mb-3" style="font-family: Arial, sans-serif; margin: 0 auto; border: 1px solid #ccc; background-color:lightgrey; padding: 20px; border-radius: 8px;
                    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1); text-align: center; width:285px; ">
                <div class="row">
                    <h4 class="mb-1" style="color: #333; margin-bottom: 10px; background-color:#F9F7F5; padding: 10px;">@Model.OperatorName</h4>
                    <div style="text-align: left;">
                        <p class="mb-1" style="margin: 0; color: #555; font-size: 15px;">
                            <strong>Level:</strong>&nbsp; @Model.LevelDesc
                        </p>
                        <p class="mb-1" style="margin: 0; color: #555; font-size: 15px;">
                            <strong>Depature City:</strong>&nbsp; @Model.DepatureCity
                        </p>
                        <p class="mb-1" style="margin: 0; color: #555; font-size: 15px;">
                            <strong>Destination City:</strong>&nbsp; @Model.DestCityName
                        </p>
                        <p class="mb-1" style="margin: 0; color: #555; font-size: 15px;">
                            <strong>Depature Date:</strong>&nbsp; @Model.Date
                        </p>
                        <p class="mb-1" style="margin: 0; color: #555; font-size: 15px;">
                            <strong>Time:</strong>&nbsp; @Model.Time
                        </p>
                        <p class="mb-1" style="margin: 0; color: #555; font-size: 15px;">
                            <strong>Plate Number:</strong>&nbsp; @Model.PlateNumber
                        </p>
                        <p class="mb-1" style="margin: 0; color: #555; font-size: 15px;">
                            <strong>Terminal:</strong>&nbsp; @Model.Terminal
                        </p>
                        <p class="mb-1" style="margin: 0; color: #555; font-size: 15px;">
                            <strong>Tariff:</strong>&nbsp; @Model.Amount
                        </p>
                    </div>
                </div>
            </div>
            @* <div style="font-family: Arial, sans-serif; margin: 0 auto; border: 1px solid #ccc; background-color:lightgrey; padding: 0; border-radius: 8px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1); text-align: center; width:285px; ">
            <div>
            @{
            var selectedButtons = Model.SeatName as List<string>;
            var selectedButtonsCount = selectedButtons?.Count();
            if (selectedButtons != null && selectedButtons.Any())
            {
            var tariffString = Regex.Replace(Model.Amount, "[^0-9.]", "");
            if (double.TryParse(tariffString, out double tariff))
            {
            var result = selectedButtons.Count * tariff;
            <p class="mt-3">You Will Pay @result for @selectedButtonsCount Seats.</p>
            }
            }
            }
            </div>
            </div> *@
        </div>
    </div>
    <div class="footer">
        <partial name="_Footer" />
    </div>
</body>
@functions {
    List<string> GetCountries()
    {
        try
        {
            var client = new System.Net.Http.HttpClient();
            var response = client.GetStringAsync("https://restcountries.com/v2/all").Result;

            var countryList = Newtonsoft.Json.JsonConvert.DeserializeObject<List<dynamic>>(response);

            // Extract 'demonym' property and sort countries alphabetically
            var sortedCountries = countryList
                .OrderBy(c => (c.name?.ToString()) ?? "")
                .Select(c => (string)c.demonym)
                .ToList();

            // Move Ethiopia and Eritrea to the top
            sortedCountries.Remove("Ethiopian");
            sortedCountries.Remove("Eritrean");
            sortedCountries.Insert(0, "Ethiopian");
            sortedCountries.Insert(1, "Eritrean");

            return sortedCountries;
        }
        catch (Exception ex)
        {
            return new List<string>();
        }
    }
}
@functions {
    string GetSeatName(int passengerIndex)
    {
        var selectedButtons = Model.SeatName as List<string>;

        if (selectedButtons != null && selectedButtons.Count > 0)
        {
            var orderedSelectedButtons = selectedButtons.OrderBy(order => int.Parse(order)).ToList();
            return orderedSelectedButtons[passengerIndex - 1];
        }

        return string.Empty;
    }
}
